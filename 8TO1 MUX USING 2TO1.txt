//2*1 MUX DESIGN CODE
module mux2to1(
    input a,b,
    input s,
    output y
    );
and(w1,a,!s);
and(w2,b,s);
or(y,w1,w2);    
endmodule


//2*1 MUX TEST BENCH
module mux2to1_tb;
reg a,b,s;
wire y;
mux2to1 uut(.a(a),.b(b),.s(s),.y(y));
initial begin
a=1;b=0;s=0;#100;
a=0;b=1;s=1;#100;
end
endmodule


//8*1 MUX DESIGN CODE
module mux8to1using2to1(
    input a,b,c,d,e,f,g,h,
    input s0,s1,s2,
    output y
    );
mux2to1 m1(.a(a),.b(b),.s(s0),.y(w1));
mux2to1 m2(.a(c),.b(d),.s(s0),.y(w2));  
mux2to1 m3(.a(e),.b(f),.s(s0),.y(w3));  
mux2to1 m4(.a(g),.b(h),.s(s0),.y(w4));  
mux2to1 m5(.a(w1),.b(w2),.s(s1),.y(w5));  
mux2to1 m6(.a(w3),.b(w4),.s(s1),.y(w6));  
mux2to1 m7(.a(w5),.b(w6),.s(s2),.y(y));      
endmodule



//8*1 MUX TEST BENCH
module mux8to1using2to1_tb;
reg a,b,c,d,e,f,g,h;
reg s0,s1,s2;
wire y;
mux8to1using2to1 uut(.a(a),.b(b),.c(c),.d(d),.e(e),.f(f),.g(g),.h(h),.s0(s0),.s1(s1),.s2(s2),.y(y));
initial begin
a=1;b=0;c=0;d=0;e=0;f=0;g=0;h=0;s0=0;s1=0;s2=0;#100;
a=0;b=0;c=0;d=0;e=1;f=0;g=0;h=0;s0=0;s1=0;s2=1;#100;
a=0;b=0;c=1;d=0;e=0;f=0;g=0;h=0;s0=0;s1=1;s2=0;#100;
a=0;b=0;c=0;d=0;e=0;f=0;g=1;h=0;s0=0;s1=1;s2=1;#100;
a=0;b=1;c=0;d=0;e=0;f=0;g=0;h=0;s0=1;s1=0;s2=0;#100;
a=0;b=0;c=0;d=0;e=0;f=1;g=0;h=0;s0=1;s1=0;s2=1;#100;
a=0;b=0;c=0;d=1;e=0;f=0;g=0;h=0;s0=1;s1=1;s2=0;#100;
a=1;b=0;c=0;d=0;e=0;f=0;g=0;h=1;s0=1;s1=1;s2=1;#100;
end
endmodule
